{"version":3,"sources":["reducers/todoReducer.js","contexts/TodoContext.js","components/AddTodo.js","components/Navbar.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["todoReducer","state","action","type","todo","id","v4","filter","TodoContext","createContext","TodoContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","todos","dispatch","useEffect","setItem","stringify","Provider","value","children","AddTodo","useContext","useState","setTodo","onSubmit","e","preventDefault","placeholder","onChange","target","required","Navbar","counter","length","className","TodoList","map","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAGaA,EAAc,SAACC,EAAOC,GAC/B,OAAOA,EAAOC,MACV,IAAK,WACD,MAAM,GAAN,mBAAWF,GAAX,CAAkB,CACdG,KAAMF,EAAOE,KAAKA,KAClBC,GAAIC,iBAEZ,IAAK,cACD,OAAOL,EAAMM,QAAO,SAAAH,GAAI,OAAIA,EAAKC,KAAOH,EAAOG,MACnD,QACI,OAAOJ,ICRNO,EAAcC,0BAyBZC,EAvBa,SAACC,GAAU,MAKTC,qBAAWZ,EAAa,IAAI,WAClD,IAAMa,EAAYC,aAAaC,QAAQ,SACvC,OAAOF,EAAYG,KAAKC,MAAMJ,GAAa,MAPZ,mBAK5BK,EAL4B,KAKrBC,EALqB,KAgBnC,OALAC,qBAAU,WACNN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC9C,CAACA,IAIA,cAACV,EAAYe,SAAb,CAAsBC,MAAO,CAACN,QAAOC,YAArC,SACMR,EAAMc,YCALC,EAtBC,WAAM,IAEVP,EAAaQ,qBAAWnB,GAAxBW,SAFU,EAKMS,mBAAS,IALf,mBAKXxB,EALW,KAKLyB,EALK,KAalB,OACI,uBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFb,EAAS,CAAChB,KAAM,WAAYC,KAAM,CAACA,UACnCyB,EAAQ,KAIR,UACI,uBAAO1B,KAAK,OAAO8B,YAAY,WAAWT,MAAOpB,EACjD8B,SAAU,SAACH,GAAD,OAAOF,EAAQE,EAAEI,OAAOX,QAAQY,UAAQ,IAClD,uBAAOjC,KAAK,SAASqB,MAAM,iBCExBa,EAnBA,WAAM,IAETnB,EAAUS,qBAAWnB,GAArBU,MAGFoB,EAA2B,IAAjBpB,EAAMqB,OAClB,0CAAcrB,EAAMqB,OAApB,sBAEA,0CAAcrB,EAAMqB,OAApB,uBAGJ,OACI,sBAAKC,UAAU,SAAf,UACI,uCACEF,MCQCG,EArBE,WAAO,IAAD,EACSd,qBAAWnB,GAA/BW,EADW,EACXA,SAAUD,EADC,EACDA,MAClB,OAAOA,EAAMqB,OACT,qBAAKC,UAAU,YAAf,SACI,6BACKtB,EAAMwB,KAAI,SAAAtC,GACP,OACI,oBAAkBuC,QAAS,kBAAMxB,EAAS,CAAChB,KAAM,cAAeE,GAAID,EAAKC,MAAzE,SACI,sCAAUD,EAAKA,SADVA,EAAKC,WAQ9B,qBAAKmC,UAAU,QAAf,oCCAOI,MAdf,WAGE,OACE,qBAAKJ,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCDOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.109a48df.chunk.js","sourcesContent":["import { v4 } from 'uuid'\r\n\r\n//list of action types for adding/removing todos\r\nexport const todoReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return [...state, {\r\n                todo: action.todo.todo,\r\n                id: v4()\r\n            }]\r\n        case 'REMOVE_TODO':\r\n            return state.filter(todo => todo.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport { todoReducer } from '../reducers/todoReducer'\r\n\r\n//Context API replaces Redux\r\n//serves as a central data store for state\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n    //takes in todoReducer and stores action types on dispatch\r\n    //initialises state with an empty array\r\n    //inline function checks if any data is stored locally,\r\n    //which returns if true, else returns empty array\r\n    const [todos, dispatch] = useReducer(todoReducer, [], () => {\r\n        const localData = localStorage.getItem('todos');\r\n        return localData ? JSON.parse(localData) : [];\r\n    })\r\n\r\n    //adds new item to local storage and refreshes page\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    //passes current list of todos and dispatch actions down component tree\r\n    return (\r\n        <TodoContext.Provider value={{todos, dispatch}} >\r\n            { props.children }\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n \r\nexport default TodoContextProvider;","import React, { useContext, useState } from 'react'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\n\r\nconst AddTodo = () => {\r\n    //destructs dispatch actions for use in component\r\n    const { dispatch } = useContext(TodoContext);\r\n\r\n    //initialises state and manipulation function\r\n    const [todo, setTodo] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_TODO', todo: {todo}})\r\n        setTodo('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"new todo\" value={todo} \r\n            onChange={(e) => setTodo(e.target.value)} required />\r\n            <input type=\"submit\" value=\"add todo\" />\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default AddTodo;","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\n\r\nconst Navbar = () => {\r\n    //destructs todos for length use\r\n    const { todos } = useContext(TodoContext);\r\n\r\n    //removes 's' from last word if only 1 task exists\r\n    const counter = todos.length === 1 ? (\r\n        <p>You have { todos.length } impending task.</p>\r\n    ) : (\r\n        <p>You have { todos.length } impending tasks.</p>\r\n    )\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>todos</h1>\r\n            { counter }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\n\r\n//grabs todo object from local storage and maps them to screen\r\nconst TodoList = () => {\r\n    const { dispatch, todos } = useContext(TodoContext);\r\n    return todos.length ? (\r\n        <div className=\"todo-list\">\r\n            <ul>\r\n                {todos.map(todo => {\r\n                    return (\r\n                        <li key={todo.id} onClick={() => dispatch({type: 'REMOVE_TODO', id: todo.id})} >\r\n                            <div>// { todo.todo }</div>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    ) : (\r\n        <div className=\"empty\">\r\n            You've no todos to do\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default TodoList;","import AddTodo from './components/AddTodo';\nimport Navbar from './components/Navbar';\nimport TodoList from './components/TodoList'\nimport TodoContextProvider from './contexts/TodoContext';\n\nfunction App() {\n  //wraps components in Provider\n  //Provider passes down reducer functions and state to children\n  return (\n    <div className=\"App\">\n      <TodoContextProvider>\n        <Navbar />\n        <AddTodo />\n        <TodoList />\n      </TodoContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}